---
import { Code } from "astro:components";
import { parentBg, childBg } from "../colors";
---

<h3 id="flex-responsiveness">Responsiveness</h3>
<div>
    <hr />
    <p>
        While <Code
            code="flex-grow"
            lang="css"
            inline
        />, <Code
            code="flex-shrink"
            lang="css"
            inline
        /> and
        <Code
            code="flex-basis"
            lang="css"
            inline
        /> can be set on their own, they are usually set together in the <Code
            code="flex"
            lang="css"
            inline
        /> shorthand. The default value is: <Code
            code="flex: 0 1 auto"
            lang="css"
            inline
        />, which means the element will not grow, will shrink, and will start
        at its content width.
    </p>
    <h4 id="flex-responsiveness-grow">Grow</h4>
    <div>
        <hr />
        <p>
            <Code
                code="flex-grow: 1"
                lang="css"
                inline
            /> will let the element grow along the flexible axis to take up any remaining
            space. The value is a proportion of the remaining space, so if all elements
            have a flex-grow of 1, they will all take up the same amount of space.
            If one element has a flex-grow of 2, it will take up twice as much space
            as the others. In the example, both 1 and 2 have the same initial width
            of 50px.
        </p>
        <div class="inline">
            <Code
                code={`.parent {\n\tdisplay: flex;\n}\n.child:first-child {\n\tflex-grow: 1;\n}`}
                lang="css"
            />
            <iframe
                title="Flexbox Grow"
                srcdoc=`<head><style>body {margin: 0; width: 100vw; height: 100vh; }div { background-color: ${parentBg}; width: 100%; height: 100%; display: flex; flex-wrap: wrap; column-gap: 10px; align-items: center; justify-content: center;} div div {
						background-color: ${childBg}; width: 50px; height: 25%; } div div:first-child {flex-grow: 1;}</style></head><body> <div>
							<div>1</div><div>2</div> </div> </body>`
            >
            </iframe>
        </div>
    </div>
    <h4 id="flex-responsiveness-shrink">Shrink</h4>
    <div>
        <hr />
        <p>
            <Code
                code="flex-shrink: 0"
                lang="css"
                inline
            /> will prevent elements from shrinking inside a flexbox. This can ensure
            a consistent width for elements. In the below example, 1 has the default
            <Code
                code="flex-shrink"
                lang="css"
                inline
            /> and will shrink up to its minimum width in an attempt to let all items
            fit. 3 has <Code
                code="flex-shrink: 0"
                lang="css"
                inline
            /> and will not shrink, so it will overflow the container.
        </p>
        <div class="inline">
            <Code
                code={`.row {\n\tdisplay: flex;\n\tflex-shrink: 0;\n}`}
                lang="css"
            />
            <iframe
                title="Flexbox Column Direction"
                srcdoc=`<head><style>body {margin: 0; width: 100vw; height: 100vh; }div { background-color: ${parentBg}; overflow: hidden; width: 100%; height: 100%; display: flex; flex-wrap: nowrap; column-gap: 10px; align-items: center; } div div {
						background-color: ${childBg}; border: 2px solid magenta; width: 45%; height: 25%; min-width: 40px; justify-content: center;} div div:not(:first-child) {flex-shrink: 0;}</style></head><body> <div>
							<div>1</div><div>2</div><div>3</div> </div> </body>`
            >
            </iframe>
        </div>
    </div>
    <h4 id="flex-responsiveness-basis">Basis</h4>
    <div>
        <hr />
        <p>
            <Code
                code="flex-basis: {width}"
                lang="css"
                inline
            /> will set the initial size of the item, to then grow and shrink from.
            <Code
                code="flex-basis: 0"
                lang="css"
                inline
            /> will start at no width, and grow to fit the content. <Code
                code="flex-basis: 200px"
                lang="css"
                inline
            /> will start at 200px, and either grow or shrink from there. In the
            example below, 1 has <Code
                code="flex-basis: 0"
                lang="css"
                inline
            /> and will grow to fit the content, while 3 has <Code
                code="flex-basis: 200px"
                lang="css"
                inline
            /> and will start at 200px.
        </p>
        <div class="inline">
            <Code
                code={`.parent {\n\tdisplay: flex;\n}.child:first-child {\n\tflex-basis: 0;\n\tflex-grow: 1;\n}.child:last-child {\n\tflex-basis: 200px;\n}`}
                lang="css"
            />
            <iframe
                title="Flexbox Column Direction"
                srcdoc=`<head><style>body {margin: 0; width: 100vw; height: 100vh; }div { background-color: ${parentBg}; overflow: hidden; width: 100%; height: 100%; display: flex; flex-wrap: nowrap; column-gap: 10px; align-items: center; } div div {
						background-color: ${childBg}; border: 2px solid magenta; width: 45%; height: 25%; min-width: 40px; justify-content: center;} div div:first-child {flex-basis: 0; flex-grow: 1;} div div:last-child{flex-basis: 200px;}</style></head><body> <div>
							<div>1</div><div>2</div><div>3</div> </div> </body>`
            >
            </iframe>
        </div>
    </div>
</div>
