---
import type { Section } from "../sections";
import Layout from "./Layout.astro";

interface Props {
    title: string;
    sections: Section[];
}

const { title, sections = [] } = Astro.props;
---

<Layout title={title}>
    {
        sections.length > 0 ? (
            <div id="categories">
                <slot name="cats" />
                <div>
                    {sections.map((section) => (
                        <div>
                            <a href={`#${section.id}`}>{section.name}</a>
                            <ul>
                                {section.subsections?.map((subsection) => (
                                    <li>
                                        <a
                                            href={`#${section.id}-${subsection.id}`}
                                        >
                                            {subsection.name}
                                        </a>
                                        <ul>
                                            {subsection.subsections?.map(
                                                (subSubSection) => (
                                                    <li>
                                                        <a
                                                            href={`#${section.id}-${subsection.id}-${subSubSection.id}`}
                                                        >
                                                            {subSubSection.name}
                                                        </a>
                                                        <ul>
                                                            {subSubSection.subsections?.map(
                                                                (
                                                                    subSubSubSection
                                                                ) => (
                                                                    <li>
                                                                        <a
                                                                            href={`#${section.id}-${subsection.id}-${subSubSection.id}-${subSubSubSection.id}`}
                                                                        >
                                                                            {
                                                                                subSubSubSection.name
                                                                            }
                                                                        </a>
                                                                    </li>
                                                                )
                                                            )}
                                                        </ul>
                                                    </li>
                                                )
                                            )}
                                        </ul>
                                    </li>
                                ))}
                            </ul>
                        </div>
                    ))}
                </div>
            </div>
        ) : null
    }
    <slot />
</Layout>

<style lang="scss">
    #categories {
        color: #e6e6e6;
        border: 1px solid #5555;
        height: fit-content;
        width: fit-content;
        min-width: min(100vw, 10em);
        max-width: 30vw;
        font-size: 1.25em;
        display: flex;
        flex-direction: column;
        justify-self: center;
        padding: min(2em, 5vw);
        height: auto;
        overflow-y: auto;
        max-height: 90vh;
        margin-left: 1rem;
        flex: 0 0 fit-content;

        @media screen and (max-width: 800px) {
            width: 100%;
            max-height: unset;
            height: fit-content;
            flex-shrink: 0;
            max-width: unset;
            margin-left: 0;
            border: none;
        }

        > div:last-child {
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            gap: 0.5em;
            width: fit-content;
        }

        div {
            gap: 0;
        }

        li {
            border-left: 1px solid #5555;
        }

        li {
            font-size: 0.8em;

            li li {
                font-size: 0.9em;
            }
        }

        ul {
            list-style: none;
            padding-left: 0.5em;

            > li {
                height: fit-content;
                width: fit-content;
                display: flex;
                flex-direction: column;
            }
        }

        a {
            color: inherit;
            text-decoration: none;
            padding: 0.25em 0.5em;
            display: flex;

            &:hover {
                filter: brightness(0.8);
            }
        }
    }
</style>

<style is:global lang="scss">
    #categories > div:first-child {
        display: flex;
        flex-direction: row;
        margin-bottom: 1em;

        a {
            color: inherit;
            text-decoration: none;
            padding: 0.25em 0.5em;
            display: flex;

            &:hover {
                filter: brightness(0.8);
            }
        }
    }

    body {
        display: flex;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: row;
        flex-direction: row;
        min-height: 100vh;
        height: fit-content;
        overflow: hidden;

        @media screen and (max-width: 800px) {
            flex-direction: column;
            flex-direction: column;
            overflow-y: auto;
            max-height: unset;
            justify-content: start;
            max-height: unset;
            justify-content: start;
        }
    }

    @media screen and (max-width: 800px) {
        main {
            overflow: unset !important;
            max-height: unset !important;
        }
    }

    div + h2 {
        padding-top: 1em;
    }

    div + h3 {
        padding-top: 0.5em;
    }

    div + h4 {
        padding-top: 0.25em;
    }

    div {
        div {
            display: flex;
            flex-direction: column;
        }
        flex-direction: column;
    }

    div:not(#categories):not(#categories div) {
        gap: 0.5em;

        &:has(hr) {
            padding-left: 0.3em;
            border-left: 1px solid #5555;
        }

        .inline {
            flex-direction: row;
            flex-wrap: wrap;

            pre {
                flex: 2 0 fit-content;
            }
            .example,
            iframe {
                flex: 1 0 fit-content;
            }
        }

        .inline-2-grid {
            display: grid;
            grid-template-columns: auto min-content;
            grid-template-columns: auto min-content;

            @media screen and (max-width: 800px) {
                grid-template-columns: 1fr;
            }
        }
    }

    h2,
    h3,
    h4,
    h5,
    h6 {
        padding-left: 0.3em;

        &,
        p {
            width: fit-content;
            &:target {
                background: linear-gradient(135deg, #ff00e6, #faa0fd);
                background-clip: text;
                -webkit-background-clip: text;
                color: transparent;
                -webkit-text-fill-color: transparent;
            }
        }
    }
</style>
