---
interface Props {
    title: string;
}
const { title } = Astro.props;

import { sections } from "../sections.ts";
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta
            name="description"
            content="Astro description"
        />
        <meta
            name="viewport"
            content="width=device-width"
        />
        <link
            rel="icon"
            type="image/svg+xml"
            href="/favicon.svg"
        />
        <meta
            name="generator"
            content={Astro.generator}
        />
        <title>{title}</title>
    </head>
    <body>
        <div class="categories">
            {
                sections.map((section) => (
                    <div>
                        <a href={`#${section.id}`}>{section.name}</a>
                        <ul>
                            {section.subsections?.map((subsection) => (
                                <li>
                                    <a href={`#${section.id}-${subsection.id}`}>
                                        {subsection.name}
                                    </a>
                                    <ul>
                                        {subsection.subsections?.map(
                                            (subsubsection) => (
                                                <li>
                                                    <a
                                                        href={`#${section.id}-${subsection.id}-${subsubsection.id}`}
                                                    >
                                                        {subsubsection.name}
                                                    </a>
                                                    <ul>
                                                        {subsubsection.subsections?.map(
                                                            (
                                                                subsubsubsection
                                                            ) => (
                                                                <li>
                                                                    <a
                                                                        href={`#${section.id}-${subsection.id}-${subsubsection.id}-${subsubsubsection.id}`}
                                                                    >
                                                                        {
                                                                            subsubsubsection.name
                                                                        }
                                                                    </a>
                                                                </li>
                                                            )
                                                        )}
                                                    </ul>
                                                </li>
                                            )
                                        )}
                                    </ul>
                                </li>
                            ))}
                        </ul>
                    </div>
                ))
            }
        </div>
        <slot />
    </body>

    <style lang="scss">
        .categories {
            color: #e6e6e6;
            border: 1px solid #5555;
            height: fit-content;
            width: fit-content;
            font-size: 1.25em;
            display: flex;
            flex-direction: column;
            justify-self: center;
            padding: 2rem;
            max-height: 90vh;

            div {
                gap: 0;
            }

            li {
                border-left: 1px solid #5555;
            }

            li {
                font-size: 0.8em;

                li li {
                    font-size: 0.9em;
                }
            }

            ul {
                list-style: none;
                padding-left: 0.5em;

                > li {
                    height: fit-content;
                    width: fit-content;
                    display: flex;
                    flex-direction: column;
                }
            }

            a {
                color: inherit;
                text-decoration: none;
                padding: 0.25em 0.5em;
                display: flex;

                &:hover {
                    filter: brightness(0.8);
                }
            }
        }

        body {
            display: grid;
            align-items: center;
            justify-content: center;
            grid-template-columns: 1fr 3fr;
            min-height: 100vh;
            max-height: 100vh;
            overflow: hidden;
        }
    </style>
    <style is:global lang="scss">
        :root {
            --accent: 136, 58, 234;
            --accent-light: 224, 204, 250;
            --accent-dark: 49, 10, 101;
            --accent-gradient: linear-gradient(
                45deg,
                rgb(var(--accent)),
                rgb(var(--accent-light)) 30%,
                white 60%
            );
        }

        div + h2 {
            padding-top: 1em;
        }

        div + h3 {
            padding-top: 0.5em;
        }

        div + h4 {
            padding-top: 0.25em;
        }

        pre,
        code {
            padding: 0.3em;
            font-size: 0.9em;
        }

        html {
            font-family: system-ui, sans-serif;
            background: #13151a;
            background-size: 224px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            min-width: 0;
        }

        code {
            font-family:
                Menlo,
                Monaco,
                Lucida Console,
                Liberation Mono,
                DejaVu Sans Mono,
                Bitstream Vera Sans Mono,
                Courier New,
                monospace;
        }

        div:not(.categories) {
            display: flex;

            &:not(.inline) {
                flex-direction: column;
            }
            gap: 0.5em;

            &:has(div) {
                padding-left: 0.3em;
                border-left: 1px solid #5555;
            }

            .inline {
                flex-direction: row;
            }

            .inline-2-grid {
                display: grid;
                grid-template-columns: auto auto;
            }
        }

        h2,
        h3,
        h4,
        h5,
        h6 {
            padding-left: 0.3em;

            &,
            p {
                width: fit-content;
                &:target {
                    background: linear-gradient(135deg, #ff00e6, #faa0fd);
                    background-clip: text;
                    -webkit-background-clip: text;
                    color: transparent;
                    -webkit-text-fill-color: transparent;
                }
            }
        }
    </style>
</html>
